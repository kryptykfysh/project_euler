#!/usr/bin/env ruby
# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten 
# pentagonal numbers are:

# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 
# 70 − 22 = 48, is not pentagonal.

# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and 
# difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of 
# D?

require 'benchmark'

def pentagon_numbers
  Enumerator.new do |e|
    n = 1
    loop do
      e.yield n * (3 * n - 1) / 2
      n += 1
    end
  end
end

def pentagonal_difference
  pn = pentagon_numbers
  arr = pn.take(3000)
  arr.combination(2).select { |x, y| arr.include?(x + y) && arr.
    include?((x - y).abs) }.map { |x, y| (x - y).abs }.min
end

if $0 == __FILE__
  puts "Value of D is: #{pentagonal_difference}"

  Benchmark.bm do |x|
    x.report { pentagonal_difference }
  end
end
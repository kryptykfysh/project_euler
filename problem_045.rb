# Triangle, pentagonal, and hexagonal numbers are generated by the following 
# formulae:

# Triangle    Tn=n(n+1)/2   1, 3, 6, 10, 15, ...
# Pentagonal    Pn=n(3n−1)/2    1, 5, 12, 22, 35, ...
# Hexagonal   Hn=n(2n−1)    1, 6, 15, 28, 45, ...
# It can be verified that T285 = P165 = H143 = 40755.

# Find the next triangle number that is also pentagonal and hexagonal.

require 'benchmark'
require 'set'

def triangle_numbers
  Enumerator.new do |e|
    n = 1
    loop do
      e.yield n * (n + 1) / 2
      n += 1
    end
  end
end

def pentagonal_numbers
  Enumerator.new do |e|
    n = 1
    loop do
      e.yield n * (3 * n - 1) / 2
      n += 1
    end
  end
end

def hexagonal_numbers
  Enumerator.new do |e|
    n = 1
    loop do
      e.yield n * (2 * n - 1)
      n += 1
    end
  end
end

def find_tri_pent_hex_number(min=285, max=100000)
  t = triangle_numbers.take(max)[min..max].to_set
  p = pentagonal_numbers.take(max)
  h = hexagonal_numbers.take(max)
  (t&(p)&(h)).first
end

if $0 == __FILE__
  puts "First triangle number also pentagonal and hexagonal: #{find_tri_pent_hex_number}"

  Benchmark.bm do |x|
    x.report { find_tri_pent_hex_number }
  end
end